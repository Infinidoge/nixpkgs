From 8269c500fbfb34a3fb286a21d2ef0655ca4eda41 Mon Sep 17 00:00:00 2001
From: Infinidoge <infinidoge@inx.moe>
Date: Tue, 6 Jun 2023 00:56:41 -0400
Subject: [PATCH] remove python 2 dependency

---
 gn/checkdir.py            |  2 +-
 gn/find_headers.py        |  4 ++--
 gn/find_ios_sysroot.py    |  2 +-
 gn/gn_meta_sln.py         |  2 +-
 gn/gn_to_bp.py            |  4 ++--
 gn/gn_to_bp_utils.py      | 14 +++++++-------
 gn/gn_to_cmake.py         |  2 +-
 gn/highest_version_dir.py |  2 +-
 gn/is_clang.py            |  4 ++--
 9 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/gn/checkdir.py b/gn/checkdir.py
index 4de7e80203..2372278c0f 100644
--- a/gn/checkdir.py
+++ b/gn/checkdir.py
@@ -10,6 +10,6 @@ import sys
 
 dirpath, = sys.argv[1:]
 
-print os.path.isdir(dirpath)
+print(os.path.isdir(dirpath))
 
 
diff --git a/gn/find_headers.py b/gn/find_headers.py
index d02bd906b7..f755439601 100755
--- a/gn/find_headers.py
+++ b/gn/find_headers.py
@@ -34,14 +34,14 @@ desc_json_txt = ''
 try:
   desc_json_txt = subprocess.check_output(gn_desc_cmd)
 except subprocess.CalledProcessError as e:
-  print e.output
+  print(e.output)
   raise
 
 desc_json = {}
 try:
   desc_json = json.loads(desc_json_txt)
 except ValueError:
-  print desc_json_txt
+  print(desc_json_txt)
   raise
 
 sources = set()
diff --git a/gn/find_ios_sysroot.py b/gn/find_ios_sysroot.py
index 789ae9f9a5..34e8aa0dfd 100644
--- a/gn/find_ios_sysroot.py
+++ b/gn/find_ios_sysroot.py
@@ -10,4 +10,4 @@ import sys
 
 (sdk,) = sys.argv[1:]
 
-print subprocess.check_output(['xcrun', '--sdk', sdk, '--show-sdk-path'])
+print(subprocess.check_output(['xcrun', '--sdk', sdk, '--show-sdk-path']))
diff --git a/gn/gn_meta_sln.py b/gn/gn_meta_sln.py
index 9f30cb02d2..186efce25f 100644
--- a/gn/gn_meta_sln.py
+++ b/gn/gn_meta_sln.py
@@ -72,7 +72,7 @@ for config in configs:
 # We need something to work with. Typically, this will fail if no GN folders
 # have IDE files
 if len(allProjects) == 0:
-    print "ERROR: At least one GN directory must have been built with --ide=vs"
+    print("ERROR: At least one GN directory must have been built with --ide=vs")
     sys.exit()
 
 # Create a new solution. We arbitrarily use the first config as the GUID source
diff --git a/gn/gn_to_bp.py b/gn/gn_to_bp.py
index 4bc3abee31..ffd776215b 100644
--- a/gn/gn_to_bp.py
+++ b/gn/gn_to_bp.py
@@ -282,7 +282,7 @@ def bpfmt(indent, lst, sort=True):
 
 # OK!  We have everything to fill in Android.bp...
 with open('Android.bp', 'w') as f:
-  print >>f, bp.substitute({
+  print(bp.substitute({
     'export_includes': bpfmt(8, export_includes),
     'local_includes':  bpfmt(8, local_includes),
     'srcs':            bpfmt(8, srcs),
@@ -306,4 +306,4 @@ with open('Android.bp', 'w') as f:
 
     'nanobench_includes'    : bpfmt(8, nanobench_includes),
     'nanobench_srcs'        : bpfmt(8, nanobench_srcs),
-  })
+  }), file=f)
diff --git a/gn/gn_to_bp_utils.py b/gn/gn_to_bp_utils.py
index f2ce648281..ece212b1f5 100644
--- a/gn/gn_to_bp_utils.py
+++ b/gn/gn_to_bp_utils.py
@@ -107,11 +107,11 @@ def WriteUserConfig(userConfigPath, defines):
 
   #... and all the #defines we want to put in SkUserConfig.h.
   with open(userConfigPath, 'w') as f:
-    print >>f, '// DO NOT MODIFY! This file is autogenerated by gn_to_bp.py.'
-    print >>f, '// If need to change a define, modify SkUserConfigManual.h'
-    print >>f, '#ifndef SkUserConfig_DEFINED'
-    print >>f, '#define SkUserConfig_DEFINED'
-    print >>f, '#include "SkUserConfigManual.h"'
+    print('// DO NOT MODIFY! This file is autogenerated by gn_to_bp.py.', file=f)
+    print('// If need to change a define, modify SkUserConfigManual.h', file=f)
+    print('#ifndef SkUserConfig_DEFINED', file=f)
+    print('#define SkUserConfig_DEFINED', file=f)
+    print('#include "SkUserConfigManual.h"', file=f)
     for define in sorted(defines):
-      print >>f, '  #define', define.replace('=', ' ')
-    print >>f, '#endif//SkUserConfig_DEFINED'
+      print('  #define', define.replace('=', ' '), file=f)
+    print('#endif//SkUserConfig_DEFINED', file=f)
diff --git a/gn/gn_to_cmake.py b/gn/gn_to_cmake.py
index 7f2f3642e2..76c6d81399 100644
--- a/gn/gn_to_cmake.py
+++ b/gn/gn_to_cmake.py
@@ -517,7 +517,7 @@ def WriteTarget(out, target, project):
   out.write('\n')
 
   if target.cmake_type is None:
-    print ('Target %s has unknown target type %s, skipping.' %
+    print('Target %s has unknown target type %s, skipping.' %
           (        target.gn_name,            target.gn_type ) )
     return
 
diff --git a/gn/highest_version_dir.py b/gn/highest_version_dir.py
index 1b82697d9a..1b0b857503 100644
--- a/gn/highest_version_dir.py
+++ b/gn/highest_version_dir.py
@@ -12,4 +12,4 @@ import sys
 dirpath = sys.argv[1]
 regex = re.compile(sys.argv[2])
 
-print sorted(filter(regex.match, os.listdir(dirpath)))[-1]
+print(sorted(filter(regex.match, os.listdir(dirpath)))[-1])
diff --git a/gn/is_clang.py b/gn/is_clang.py
index a63111c7a9..03a388ef2a 100755
--- a/gn/is_clang.py
+++ b/gn/is_clang.py
@@ -11,7 +11,7 @@ cc,cxx = sys.argv[1:3]
 
 if ('clang' in subprocess.check_output('%s --version' % cc, shell=True) and
     'clang' in subprocess.check_output('%s --version' % cxx, shell=True)):
-  print 'true'
+  print('true')
 else:
-  print 'false'
+  print('false')
 
-- 
2.40.1

